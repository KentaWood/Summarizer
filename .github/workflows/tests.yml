name:tests

# This workflow is triggered on both pushes and pull requests to any branch.
on:
  push:
    branches: ['*']  # Trigger the workflow on any branch push event.
  pull_request:
    branches: ['*']  # Trigger the workflow on any pull request targeting any branch.

jobs:
  tests:
    # Define a matrix strategy to run tests on multiple Python versions (3.8 and 3.9).
    strategy:
      matrix:
        python: [3.8, 3.9]  # This will run the job on both Python 3.8 and 3.9 environments.
    
    # Use the latest Ubuntu environment for the job.
    runs-on: ubuntu-latest  
    
    # Set environment variable GROQ_API_KEY from GitHub secrets for secure access.
    env:
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}  # Pulls the GROQ_API_KEY from the GitHub repository's secrets.
    
    steps:
      # Step 1: Check out the code from the repository.
      - uses: actions/checkout@v2  # Uses the GitHub checkout action to fetch the latest code from the branch.
      
      # Step 2: Set up Python based on the matrix-defined versions (3.8 and 3.9).
      - name: Set up Python ${{matrix.python}}
        uses: actions/setup-python@v2  # GitHub action to set up the appropriate Python version.
        with:
          python-version: ${{matrix.python}}  # Use the Python version defined in the matrix.

      # Step 3: Install dependencies using pip.
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrade pip to the latest version.
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  # If a requirements.txt file exists, install dependencies from it.

      # Step 4: Run the test on the `declaration.txt` file using the script `docsum.py`.
      - name: test declaration
        run: |
          python3 docsum.py docs/declaration.txt  # Execute the Python script to run the test on the specified file.
